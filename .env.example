# HireDesk Auth API Environment Configuration --- IGNORE ---
# Copy this file to .env and fill in your actual values

# ==========================================
# DATABASE CONFIGURATION
# ==========================================
# NeonDB (PostgreSQL) connection string
# Get this from your NeonDB dashboard: https://console.neon.tech
DATABASE_URL="postgresql://username:password@hostname:5432/database?sslmode=require"

# ==========================================
# JWT AUTHENTICATION CONFIGURATION
# ==========================================
# JWT Secret for access tokens (use a strong, random string in production)
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_ACCESS_SECRET=your-super-secret-access-key-change-this-in-production-minimum-32-characters

# JWT Secret for refresh tokens (different from access token secret)
JWT_REFRESH_SECRET=your-super-secret-refresh-key-change-this-in-production-minimum-32-characters

# JWT Token expiration times
JWT_ACCESS_EXPIRES_IN=15m
JWT_REFRESH_EXPIRES_IN=7d

# ==========================================
# STRIPE PAYMENT CONFIGURATION
# ==========================================
# Stripe Secret Key (get from https://dashboard.stripe.com/apikeys)
# Use test keys for development: sk_test_...
# Use live keys for production: sk_live_...
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key_here

# Stripe Publishable Key (safe to expose in frontend)
STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key_here

# ==========================================
# SERVER CONFIGURATION
# ==========================================
# Server port
PORT=5000

# Node environment
NODE_ENV=development

# CORS Configuration (add your frontend URLs)
CORS_ORIGINS=http://localhost:3000,http://localhost:5173,https://your-frontend-domain.com

# ==========================================
# PRODUCTION NOTES
# ==========================================
# 1. Never commit your .env file to version control
# 2. Use strong, unique secrets for JWT keys (minimum 32 characters)
# 3. Use different secrets for JWT_SECRET and JWT_REFRESH_SECRET
# 4. Switch to live Stripe keys when deploying to production
# 5. Use NeonDB for production (https://neon.tech)
# 6. Set NODE_ENV=production for production deployment

# ==========================================
# DEVELOPMENT SETUP CHECKLIST
# ==========================================
# [ ] NeonDB database is created and connection string is set
# [ ] JWT secrets are generated and set
# [ ] Stripe test keys are obtained and set
# [ ] CORS origins include your frontend URL
# [ ] All required npm packages are installed
# [ ] Server starts without errors (npm run dev)
# [ ] Authentication endpoints work (test with test-auth.js)
# [ ] Payment endpoints work (test with test-payment.js)
